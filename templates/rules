#!/usr/bin/make -f

include debian/confflags

DEB_HOST_GNU_CPU = $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)

libdir = $(CURDIR)/debian/$(NAME)/usr/lib/$(NAME)/
datadir = $(CURDIR)/debian/$(NAME)-data/usr/share/games/$(NAME)/
plugindir = source/$(NAME)_Data/Plugins

ifeq ($(DATAPACKAGE), yes)
	ICONPREFIX = usr/share/games/
	ICONDEST = $(CURDIR)/debian/$(NAME)-data/usr/share
	LINKS = $(NAME)-data.links
else
	ICONPREFIX = usr/lib/
	ICONDEST = $(CURDIR)/debian/$(NAME)/usr/share
	LINKS = $(NAME).links
endif

BIGGESTICON = \
  for d in 512 256 128 96 64 48 32 24 16 ; do \
    dir="$(ICONDEST)/icons/hicolor/$${d}x$${d}"; \
    if [ -d $$dir ]; then \
      sed -i "s/@BIGGESTICON@/$$(basename $$dir)/;" debian/$(LINKS) ; \
      exit 0; \
    fi; \
  done


%:
	dh ${@}

override_dh_auto_build:
	rm -rf source/$(NAME).$(xCPU) \
		source/$(NAME)_Data/Mono/$(xCPU) \
		source/$(NAME)_Data/Plugins/$(xCPU)
	mv source/$(NAME).$(CPU) source/$(NAME)
	find source -type f -exec chmod a-x '{}' \;
	find source -name libmono.so -exec execstack -c '{}' \;
	chmod a+x source/$(NAME)

	# delete this line if it breaks the game, but normally
	# it should work without the Steam API things
	rm -rf source/libsteam_api.so source/libSteamworksNative.so \
			source/steam_appid.txt source/SteamworksNative.dll

override_dh_auto_install:
	mkdir -p $(libdir) $(ICONDEST) $(CURDIR)/debian/$(NAME)/usr/games \
		$(CURDIR)/debian/$(NAME)/usr/share/applications
	debian/make-icons.sh $(ICON) $(ICONDEST)
	cp -r source/* $(libdir)
	install -m644 $(NAME).desktop $(CURDIR)/debian/$(NAME)/usr/share/applications
	ln -s /usr/lib/$(NAME)/$(NAME) $(CURDIR)/debian/$(NAME)/usr/games/$(NAME)

ifeq ($(DATAPACKAGE), yes)
	rm -rf $(libdir)$(NAME)_Data
	mkdir -p $(datadir) $(libdir)$(NAME)_Data $(CURDIR)/debian/$(NAME)-data/usr/share
	cp -r source/$(NAME)_Data $(datadir)
	cp -r source/$(NAME)_Data/Mono $(libdir)$(NAME)_Data
	cd $(datadir)$(NAME)_Data && rm -rf Mono Plugins
	[ -d $(plugindir) ] && cp -r $(plugindir) $(libdir)$(NAME)_Data

	# why does this not work if I add the code in here?
	$(MAKE) -f debian/link.mk
endif
	echo '/usr/share/icons/hicolor/@BIGGESTICON@/apps/$(NAME).png $(ICONPREFIX)$(NAME)/$(NAME)_Data/Resources/UnityPlayer.png' \
		> $(CURDIR)/debian/$(LINKS)
	$(BIGGESTICON)

override_dh_makeshlibs:
	# Unity engine games load their own libraries as plugins

#override_dh_shlibdeps:
#	# remove unnecessary dependencies that a binary was errerously linked against
#	# by deleting their DT_NEEDED entries from the ELF header
#	patchelfmod --remove-needed libxyz.so.0,libabc.so.1 binaryfile
#	dh_shlibdeps

override_dh_gencontrol:
	dh_gencontrol
	# prevents Lintian warning virtual-package-depends-without-real-package-depends
	sed -i 's/, libgl1,/, libgl1-mesa-glx | libgl1,/g' debian/$(NAME)/DEBIAN/control

# fix architecture when packaging i386 (amd64 only)
ifeq ($(CPU), x86)
	ifeq ($(DEB_HOST_GNU_CPU), x86_64)
		sed -i 's/Architecture: amd64/Architecture: i386/g' debian/$(NAME)/DEBIAN/control
	endif
endif

# fix architecture when packaging amd64 (i386 only)
ifeq ($(CPU), x86_64)
	ifneq (, $(filter i386 i486 i586 i686 pentium,$(DEB_HOST_GNU_CPU)))
		sed -i 's/Architecture: i386/Architecture: amd64/g' debian/$(NAME)/DEBIAN/control
	endif
endif

override_dh_builddeb:
	dh_builddeb -- -Z$(Z) -z9

